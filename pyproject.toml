[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "spotify_favorites_fixer"
version = "0.4.0"
description = ""
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Douglas Thor"},  # so that package core metadata "Author" field gets populated.
    {name = "Douglas Thor", email = "doug.thor@gmail.com"},
]
maintainers = []
keywords = []
classifiers = []
dependencies = [
    "click == 8.1.3",
    "loguru == 0.6.0",
    "spotipy == 2.20.0",
]

[project.optional-dependencies]
develop = [
    "coverage[toml] == 6.4.4",
    "pre-commit == 2.20.0",
    "pytest == 7.1.3",
    "pytest-cov == 3.0.0",
]

[project.scripts]

[project.urls]
"Source Code" = "https://github.com/dougthor42/spotify-favorites-fixer"
"Changelog" = "https://github.com/dougthor42/spotify-favorites-fixer/blob/master/CHANGELOG.md"
"Bug Tracker" = "https://github.com/dougthor42/spotify-favorites-fixer/issues"

[tool.setuptools]
py-modules = ["fix_spotify_favorites"]

[tool.mypy]
show_error_codes = true

[tool.pytest.ini_options]
# Note: We use the pytest-cov option "--cov-context test" here instead of the
# coverage option "dynamic_context = test_function" in [tool.coverage.run] because
# then the contexts will include the full pytest name and account for
# parametrized fuctions.
# Basically the difference between this (`pytest-cov`)
#   tests/test_cli.py::TestCli::test_cli[test_args0]|run
#   tests/test_cli.py::TestCli::test_cli[test_args1]|run
#   tests/test_cli.py::TestCli::test_cli_invalid_args[invalid_args2]|run
#   tests/test_cli.py::TestCli::test_cli_invalid_args[invalid_args3]|run
# and this (just plain `coverage`)
#   tests.test_cli.TestCli.test_cli_invalid_args
#   tests.test_cli.TestCli.test_cli_prompts_for_days
# The full pytest name shows us that the first two parametrized tests of
# test_cli_invalid_args do NOT test the line.
addopts = """
  -ra \
  --cov fix_spotify_favorites \
  --cov-report html \
  --cov-context test \
  """

[tool.coverage.run]
branch = true

[tool.coverage.html]
show_contexts = true

[tool.ruff]
target-version = "py38"
